from celery import shared_task
from django.utils import timezone
from datetime import timedelta
from django.contrib.auth import get_user_model
from .models import Habit
from habit.services import send_tg_message

User = get_user_model()


@shared_task
def check_habits():
    '''–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º –∑–∞ —á–∞—Å –¥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–∏–≤—ã—á–∫–∏'''

    now = timezone.localtime(timezone.now())
    time_threshold = now + timedelta(hours=1)

    habits = Habit.objects.filter(
        time__hour=time_threshold.hour,
        time__minute=time_threshold.minute
    )

    for habit in habits:
        try:
            user = habit.user
            if not user.telegram_chat_id:
                continue

            if habit.last_notification:
                time_passed = now - habit.last_notification
                if time_passed.days < habit.frequency:
                    continue

            message = (
                f"üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –ø—Ä–∏–≤—ã—á–∫–µ!\n"
                f"–ß–µ—Ä–µ–∑ —á–∞—Å ({habit.time.strftime('%H:%M')}) –Ω—É–∂–Ω–æ:\n"
                f"‚Ä¢ –î–µ–π—Å—Ç–≤–∏–µ: {habit.action}\n"
                f"‚Ä¢ –ú–µ—Å—Ç–æ: {habit.place}\n"
                f"‚Ä¢ –í—Ä–µ–º—è –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ: {habit.execution_time} —Å–µ–∫"
            )

            send_tg_message(
                chat_id=user.telegram_chat_id,
                message=message
            )

            habit.last_notification = now
            habit.save()
        except Exception as e:

            print(f"Error in habit {habit.id}: {str(e)}")